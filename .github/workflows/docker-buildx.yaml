name: Build docker images

on:
  # repository_dispatch:
  #   types:
  #     - base-image-update
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "Dockerfile"
      - "versions.json"
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: terraform-azure-cli
  IMAGE_NAME_FULL: ${{ github.repository_owner }}/terraform-azure-cli

jobs:
  load-matrix-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Save supported versions as output
        id: set-matrix
        run: |
          echo 'matrix<<EOF' >> $GITHUB_OUTPUT
          cat versions.json >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  docker-buildx:
    runs-on: ubuntu-latest
    needs: load-matrix-build
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      matrix: ${{ fromJSON(needs.load-matrix-build.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FULL }}
          labels: |
            maintainer=${{ github.repository_owner}}
            org.opencontainers.image.vendor=${{ github.repository_owner}}
            org.opencontainers.image.title=${{ env.IMAGE_NAME}}
            org.opencontainers.image.description="This image contains azure-cli and terraform to be used in CI/CD pipelines or local development."
            com.hashicorp.terraform.version=${{ matrix.terraform_versions }}
            com.azure.cli.version=${{ matrix.azure_cli_versions }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max`
          platforms: |
            linux/amd64
            linux/arm64/v8
          build-args: |
            TERRAFORM_VERSION=${{ matrix.terraform_versions }}
            AZURE_CLI_VERSION=${{ matrix.azure_cli_versions }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FULL }}:terraform-${{ matrix.terraform_versions }}-azure-cli-${{ matrix.azure_cli_versions }}
            ${{ steps.meta.outputs.tags }}

      - if: github.event_name != 'pull_request'
        name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FULL}}
          subject-digest: ${{ steps.docker_build.outputs.digest }}
          push-to-registry: ${{ github.event_name != 'pull_request' }}
